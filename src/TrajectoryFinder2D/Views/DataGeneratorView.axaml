<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:m="clr-namespace:TrajectoryFinder2D.Models"
             xmlns:vm="clr-namespace:TrajectoryFinder2D.ViewModels"
             xmlns:b="clr-namespace:TrajectoryFinder2D.Behaviours"
             xmlns:i="clr-namespace:Avalonia.Xaml.Interactivity;assembly=Avalonia.Xaml.Interactivity"
             xmlns:ia="clr-namespace:Avalonia.Xaml.Interactions.Core;assembly=Avalonia.Xaml.Interactions"
             mc:Ignorable="d" d:DesignWidth="500" d:DesignHeight="400"
             x:Class="TrajectoryFinder2D.Views.DataGeneratorView">
  <UserControl.Styles>
    <Style Selector="ItemsControl > ContentPresenter">
      <Setter Property="Canvas.Left" Value="{Binding Left, Mode=OneWay}" />
      <Setter Property="Canvas.Top" Value="{Binding Top, Mode=OneWay}" />
    </Style>
  </UserControl.Styles>
  <DockPanel>
    <Border DockPanel.Dock="Bottom"
            VerticalAlignment="Center"
            CornerRadius="{DynamicResource ControlCornerRadius}"
            Padding="4" Margin="4"
            BorderThickness="2"
            BorderBrush="{DynamicResource SystemChromeBlackLowColor}">
      <StackPanel Margin="4">
        <Button Content="{Binding PauseContinueText}"
                Margin="4"
                HorizontalAlignment="Stretch"
                HorizontalContentAlignment="Center"
                Command="{Binding PauseContinue}"
                IsEnabled="{Binding IsPauseContinueEnabled} "/>
        <Button Content="Save"
                Margin="4"
                HorizontalAlignment="Stretch"
                HorizontalContentAlignment="Center"
                Command="{Binding Save}"
                IsEnabled="{Binding IsSaveEnabled}" />
        <Button Content="Back"
                Margin="4"
                HorizontalAlignment="Stretch"
                HorizontalContentAlignment="Center"
                Command="{Binding Back}"
                IsEnabled="{Binding IsBackEnabled} "/>
      </StackPanel>
    </Border>
    <ItemsControl Items="{Binding ShapeCollection}">
      <ItemsControl.ItemsPanel>
        <ItemsPanelTemplate>
          <Canvas Background="White" Margin="4">
            <i:Interaction.Behaviors>
              <b:MouseBehaviour MousePosition="{Binding PanelMousePosition, Mode=OneWayToSource}" />
            </i:Interaction.Behaviors>
          </Canvas>
        </ItemsPanelTemplate>
      </ItemsControl.ItemsPanel>
      <ItemsControl.DataTemplates>
        <DataTemplate DataType="{x:Type m:Circle}">
          <Ellipse Fill="{Binding FillColor, Mode=OneWay}"
                   Width="{Binding Diameter, Mode=OneWay}"
                   Height="{Binding Diameter, Mode=OneWay}" >
            <i:Interaction.Behaviors>
              <ia:EventTriggerBehavior EventName="PointerPressed" >
                <ia:InvokeCommandAction Command="{Binding $parent[ItemsControl].DataContext.LeftMouseButtonDown}" />
              </ia:EventTriggerBehavior>
              <ia:EventTriggerBehavior EventName="PointerReleased" >
                <ia:InvokeCommandAction Command="{Binding $parent[ItemsControl].DataContext.LeftMouseButtonUp}" />
              </ia:EventTriggerBehavior>
              <ia:EventTriggerBehavior EventName="PointerMoved" >
                <ia:InvokeCommandAction Command="{Binding $parent[ItemsControl].DataContext.PreviewMouseMove}"
                                        CommandParameter="{Binding Path=.}" />
              </ia:EventTriggerBehavior>
            </i:Interaction.Behaviors>
          </Ellipse>
        </DataTemplate>
        <DataTemplate DataType="{x:Type m:Square}">
          <Rectangle Fill="{Binding FillColor, Mode=OneWay}"
                     Width="{Binding Length, Mode=OneWay}"
                     Height="{Binding Length, Mode=OneWay}">
            <i:Interaction.Behaviors>
              <ia:EventTriggerBehavior EventName="PointerPressed" >
                <ia:InvokeCommandAction Command="{Binding $parent[ItemsControl].DataContext.LeftMouseButtonDown}" />
              </ia:EventTriggerBehavior>
              <ia:EventTriggerBehavior EventName="PointerReleased" >
                <ia:InvokeCommandAction Command="{Binding $parent[ItemsControl].DataContext.LeftMouseButtonUp}" />
              </ia:EventTriggerBehavior>
              <ia:EventTriggerBehavior EventName="PointerMoved" >
                <ia:InvokeCommandAction Command="{Binding $parent[ItemsControl].DataContext.PreviewMouseMove}"
                                        CommandParameter="{Binding Path=.}" />
              </ia:EventTriggerBehavior>
            </i:Interaction.Behaviors>
          </Rectangle>
        </DataTemplate>
        <DataTemplate DataType="{x:Type m:PolyLine}">
          <Polyline Stroke="{Binding FillColor, Mode=OneWay}" Points="{Binding Points, Mode=OneWay}" />
        </DataTemplate>
      </ItemsControl.DataTemplates>
    </ItemsControl>
  </DockPanel>
</UserControl>
